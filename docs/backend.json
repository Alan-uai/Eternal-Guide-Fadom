
{
  "entities": {
    "SavedAnswer": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "SavedAnswer",
      "type": "object",
      "description": "Represents a saved AI-generated answer for later use.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the saved answer."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who saved this answer. (Relationship: User 1:N SavedAnswer)"
        },
        "question": {
          "type": "string",
          "description": "The original question asked to the AI."
        },
        "answer": {
          "type": "string",
          "description": "The AI-generated answer that was saved."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the answer was saved.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "question",
        "answer",
        "createdAt"
      ]
    },
    "WikiContent": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "WikiContent",
      "type": "object",
      "description": "Represents a page or article from the Anime Eternal Wiki, either from Fandom or a custom in-app wiki.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the wiki content."
        },
        "title": {
          "type": "string",
          "description": "The title of the wiki page."
        },
        "content": {
          "type": "string",
          "description": "The main content of the wiki page (e.g., text, HTML)."
        },
        "source": {
          "type": "string",
          "description": "Indicates the source of the wiki content (e.g., 'Fandom', 'In-App')."
        },
        "lastUpdated": {
          "type": "string",
          "description": "Timestamp indicating when the wiki content was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "title",
        "content",
        "source",
        "lastUpdated"
      ]
    },
    "ContentSuggestion": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ContentSuggestion",
      "type": "object",
      "description": "Represents a suggestion made by a user for new or updated content for the Wiki.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the content suggestion."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who made the suggestion. (Relationship: User 1:N ContentSuggestion)"
        },
        "title": {
          "type": "string",
          "description": "Suggested title for the new/updated content."
        },
        "content": {
          "type": "string",
          "description": "The suggested content itself (e.g., text, description)."
        },
        "status": {
          "type": "string",
          "description": "The current status of the suggestion (e.g., 'pending', 'approved', 'rejected')."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the suggestion was made.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "content",
        "status",
        "createdAt"
      ]
    },
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the Eternal Guide app.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "username": {
          "type": "string",
          "description": "The user's chosen username."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "createdAt"
      ]
    },
    "World": {
      "title": "World",
      "type": "object",
      "description": "Represents one of the 21 worlds in the game.",
      "properties": {
        "name": { "type": "string", "description": "The name of the world (e.g., 'World 20 - Grand Elder')." }
      },
       "required": ["name"]
    },
    "Power": {
        "title": "Power",
        "type": "object",
        "description": "Represents a gacha or progression power within a world.",
        "properties": {
            "name": { "type": "string", "description": "Name of the power set (e.g., 'Grand Elder Power')." },
            "type": { "type": "string", "enum": ["gacha", "progression"], "description": "The type of power." },
            "statType": { "type": "string", "enum": ["energy", "damage", "coin", "mixed"], "description": "The primary stat this power affects. 'mixed' indicates multiple types of boosts." },
            "maxLevel": { "type": "number", "description": "The maximum level for a progression power." },
            "maxBoost": { "type": "string", "description": "The maximum boost for a single-stat progression power." },
            "unlockCost": { "type": "string", "description": "The cost in coins to unlock this power for rolling or progression." },
            "leveling": {
                "type": "object",
                "description": "Details about the leveling system for a gacha power.",
                "properties": {
                    "token": { "type": "string", "description": "The name of the token used for leveling." },
                    "costPerLevel": { "type": "number", "description": "The number of tokens required for each level-up." },
                    "maxLevel": { "type": "number", "description": "The maximum level achievable." },
                    "description": { "type": "string", "description": "A brief description of the leveling mechanic." }
                }
            },
            "boosts": {
              "type": "array",
              "description": "An array of boosts for mixed progression powers.",
              "items": {
                "type": "object",
                "properties": {
                  "type": { "type": "string", "enum": ["damage", "energy", "coin"] },
                  "value": { "type": "string" }
                }
              }
            }
        },
        "required": ["name", "type"]
    },
    "PowerStat": {
        "title": "PowerStat",
        "type": "object",
        "description": "Represents an individual stat or level for a power.",
        "properties": {
            "name": { "type": "string", "description": "Name of the stat level (e.g., 'Sleeping Power', 'Second Form')." },
            "multiplier": { "type": "string", "description": "The stat multiplier (e.g., '2x', '1.5x')." },
            "rarity": { "type": "string", "description": "The rarity of the gacha roll (e.g., 'Phantom', 'Supreme')." },
            "probability": { "type": "number", "description": "The probability of getting this roll."},
            "statType": { "type": "string", "enum": ["energy", "damage", "coin"], "description": "The stat this specific level affects, for mixed gacha powers." },
            "energy_crit_bonus": { "type": "string", "description": "The energy critical hit chance bonus (e.g., '1.00%')." }
        },
        "required": ["name"]
    },
    "NPC": {
        "title": "NPC",
        "type": "object",
        "description": "Represents a non-player character in a world.",
        "properties": {
            "name": { "type": "string" },
            "rank": { "type": "string", "description": "The rank of the NPC (e.g., 'E', 'SS')." },
            "drops": { "type": "array", "items": { "type": "string" }, "description": "List of items dropped by the NPC." },
            "exp": { "type": "number", "description": "Experience points dropped by the NPC." }
        },
        "required": ["name", "rank"]
    },
    "Pet": {
        "title": "Pet",
        "type": "object",
        "description": "Represents a companion pet in a world.",
        "properties": {
            "name": { "type": "string" },
            "rarity": { "type": "string" },
            "energy_bonus": { "type": "string", "description": "The energy bonus provided by the pet." }
        },
        "required": ["name", "rarity", "energy_bonus"]
    },
    "Dungeon": {
        "title": "Dungeon",
        "type": "object",
        "description": "Represents a dungeon within a world.",
        "properties": {
            "name": { "type": "string" },
            "boss": { "type": "string" },
            "description": { "type": "string" }
        },
        "required": ["name"]
    },
    "Accessory": {
        "title": "Accessory",
        "type": "object",
        "description": "Represents a wearable accessory dropped by a boss in a specific world.",
        "properties": {
            "name": { "type": "string", "description": "The name of the accessory." },
            "world": { "type": "string", "description": "The name of the world where the accessory drops." },
            "boss": { "type": "string", "description": "The name of the boss that drops the accessory." },
            "rarity": { "type": "string", "description": "The rarity of the accessory (e.g., C-Rank, S-Rank, SS-Rank)." },
            "coins_bonus": { "type": "string", "description": "The coin bonus multiplier (e.g., '0.1', '2.25')." },
            "energy_bonus": { "type": "string", "description": "The energy bonus multiplier (e.g., '0.01x', '0.75x')." },
            "exp_bonus": { "type": "string", "description": "The experience bonus percentage (e.g., '1.0%', '7.5%')." },
            "damage_bonus": { "type": "string", "description": "The damage bonus multiplier (e.g., '0.05x', '1x')." },
            "movespeed_bonus": { "type": "string", "description": "The movement speed bonus percentage (e.g., '10%', '75%')." }
        },
        "required": ["name", "world", "boss"]
    },
    "Shadow": {
      "title": "Shadow",
      "type": "object",
      "description": "Represents a Shadow fighter, a special type of fighter dropped by bosses from World 6 onwards.",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string", "description": "The name of the Shadow, usually tied to the boss that drops it." },
        "type": { "type": "string", "enum": ["Energy", "Damage"], "description": "The type of bonus the Shadow provides." },
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "rank": { "type": "string", "description": "The boss rank that drops this stat version (e.g., 'Rank SS', 'Rank SSS')." },
              "rarity": { "type": "string", "description": "The rarity of the Shadow (e.g., 'Phantom', 'Supremo')." },
              "bonus": { "type": "string", "description": "The bonus value (e.g., '7% Energy', '7% Damage')." },
              "cooldown": { "type": "string", "description": "The attack cooldown, applicable only to Damage Shadows (e.g., '2s')." }
            },
            "required": ["rank", "rarity", "bonus"]
          }
        }
      },
      "required": ["id", "name", "type", "stats"]
    },
    "Stand": {
      "title": "Stand",
      "type": "object",
      "description": "Represents a Stand fighter, a special type of fighter from World 16.",
      "properties": {
        "id": { "type": "string" },
        "name": { "type": "string", "description": "The name of the Stand." },
        "rarity": { "type": "string", "description": "The rarity of the Stand." },
        "energy_bonus": { "type": "string", "description": "The energy bonus provided by the Stand." }
      },
      "required": ["id", "name", "rarity", "energy_bonus"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": { "$ref": "#/backend/entities/User" },
          "description": "Stores user profile information."
        }
      },
      {
        "path": "/users/{userId}/savedAnswers/{savedAnswerId}",
        "definition": {
          "entityName": "SavedAnswer",
          "schema": { "$ref": "#/backend/entities/SavedAnswer" },
          "description": "Stores AI-generated answers saved by the user."
        }
      },
      {
        "path": "/users/{userId}/contentSuggestions/{contentSuggestionId}",
        "definition": {
          "entityName": "ContentSuggestion",
          "schema": { "$ref": "#/backend/entities/ContentSuggestion" },
          "description": "Stores content suggestions made by the user for the Wiki."
        }
      },
      {
        "path": "/wikiContent/{wikiContentId}",
        "definition": {
          "entityName": "WikiContent",
          "schema": { "$ref": "#/backend/entities/WikiContent" },
          "description": "Stores general wiki articles. This is for high-level guides, not detailed game data."
        }
      },
      {
        "path": "/worlds/{worldId}",
        "definition": {
          "entityName": "World",
          "schema": { "$ref": "#/backend/entities/World" },
          "description": "Top-level collection for each game world."
        }
      },
      {
        "path": "/worlds/{worldId}/powers/{powerId}",
        "definition": {
          "entityName": "Power",
          "schema": { "$ref": "#/backend/entities/Power" },
          "description": "Sub-collection for powers available in a world."
        }
      },
      {
        "path": "/worlds/{worldId}/powers/{powerId}/stats/{statId}",
        "definition": {
          "entityName": "PowerStat",
          "schema": { "$ref": "#/backend/entities/PowerStat" },
          "description": "The individual levels and stats for a specific power."
        }
      },
      {
        "path": "/worlds/{worldId}/npcs/{npcId}",
        "definition": {
          "entityName": "NPC",
          "schema": { "$ref": "#/backend/entities/NPC" },
          "description": "Sub-collection for NPCs found in a world."
        }
      },
      {
        "path": "/worlds/{worldId}/pets/{petId}",
        "definition": {
          "entityName": "Pet",
          "schema": { "$ref": "#/backend/entities/Pet" },
          "description": "Sub-collection for pets available in a world."
        }
      },
      {
        "path": "/worlds/{worldId}/dungeons/{dungeonId}",
        "definition": {
          "entityName": "Dungeon",
          "schema": { "$ref": "#/backend/entities/Dungeon" },
          "description": "Sub-collection for dungeons located in a world."
        }
      },
      {
        "path": "/worlds/{worldId}/accessories/{accessoryId}",
        "definition": {
          "entityName": "Accessory",
          "schema": { "$ref": "#/backend/entities/Accessory" },
          "description": "Sub-collection for accessories available in a world."
        }
      },
      {
        "path": "/worlds/{worldId}/shadows/{shadowId}",
        "definition": {
          "entityName": "Shadow",
          "schema": { "$ref": "#/backend/entities/Shadow" },
          "description": "Sub-collection for Shadow fighters available in a world."
        }
      },
      {
        "path": "/worlds/{worldId}/stands/{standId}",
        "definition": {
          "entityName": "Stand",
          "schema": { "$ref": "#/backend/entities/Stand" },
          "description": "Sub-collection for Stand fighters available in a world."
        }
      }
    ],
    "reasoning": "The Firestore structure is organized with 'worlds' as the top-level collection to logically separate game content. Each world document contains sub-collections for 'powers', 'npcs', 'pets', 'dungeons', 'accessories', 'shadows' and 'stands', creating a hierarchical and scalable data model. This allows for efficient querying of specific game data. For example, to get all shadows for 'World 7', you query the '/worlds/world7/shadows' sub-collection. This model is much more detailed and accurate than the previous one, and enables the AI to answer specific questions about game content by querying the appropriate sub-collection."
  }
}

